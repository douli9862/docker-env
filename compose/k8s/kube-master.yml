kube-apiserver:
  image: gcr.io/google_containers/kube-apiserver:v1.2.5
  privileged: true
  pid: host
  net: host
  command: >
    /usr/local/bin/kube-apiserver
    --etcd-servers=http://${HOST_IP}:4001
    --service-cluster-ip-range=${K8S_CLUSTER_CIDR}
    --insecure-bind-address=0.0.0.0
    --insecure-port=${K8S_APISERVER_PORT}
    --v=2
    --advertise-address=${HOST_IP}
    --allow-privileged=true
  volumes:
    - /srv/kubernetes:/srv/kubernetes
    - /var/log/kube-apiserver.log:/var/log/kube-apiserver.log
    - /etc/ssl:/etc/ssl
    - /var/ssl:/var/ssl
    - /etc/openssl:/etc/openssl
    - /etc/pki:/etc/pki
    - /srv/sshproxy:/srv/sshproxy

kube-controller-manager:
  image: gcr.io/google_containers/kube-controller-manager:v1.2.5
  privileged: true
  pid: host
  net: host
  command: >
    /usr/local/bin/kube-controller-manager
    --master=http://${HOST_IP}:${K8S_APISERVER_PORT}
    --cluster-name=k8s
    --cluster-cidr=${K8S_CLUSTER_CIDR}
    --allocate-node-cidrs=false
    --port=10252
    --terminated-pod-gc-threshold=10
    --v=2
  volumes:
    - /srv/kubernetes:/srv/kubernetes
    - /var/log/kube-controller-manager.log:/var/log/kube-controller-manager.log
    - /etc/ssl:/etc/ssl
    - /var/ssl:/var/ssl
    - /etc/openssl:/etc/openssl
    - /etc/pki:/etc/pki

kube-scheduler:
  image: gcr.io/google_containers/kube-scheduler:v1.2.5
  privileged: true
  pid: host
  net: host
  command: >
    /usr/local/bin/kube-scheduler
    --master=http://${HOST_IP}:${K8S_APISERVER_PORT}
    --port=10251
    --v=2
  volumes:
    - /var/log/kube-scheduler.log:/var/log/kube-scheduler.log

# kube-addon-manager:
  # image: gcr.io/google-containers/kube-addon-manager:v5
  # net: "host"
  # volumes:
    # - /etc/kubernetes:/etc/kubernetes

kube-dashboard:
  image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.1.0
  command: >
    --apiserver-host=http://${HOST_IP}:${K8S_APISERVER_PORT}
    --port=9090
  ports:
    - 9090:9090

# NOTE: If you want to use kube-dns cross the cluster, as the official docs,
# please use pod+service to deploy the kube-dns.
# http://kubernetes.io/docs/getting-started-guides/docker-multinode/deployDNS/
kube-dns:
  image: gcr.io/google_containers/kubedns-amd64:1.5
  # net: host
  command: >
    --domain=${K8S_DNS_DOMAIN}
    --dns-port=10053
    --kube-master-url=http://${HOST_IP}:${K8S_APISERVER_PORT}
  ports:
    - 10053:10053/udp
    - 10053:10053

dnsmasq:
  image: gcr.io/google_containers/kube-dnsmasq-amd64:1.3
  net: host
  command: >
    --cache-size=1000
    --no-resolv
    --server=${K8S_DNS_SERVER_IP}#10053
